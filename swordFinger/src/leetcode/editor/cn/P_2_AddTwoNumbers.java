package leetcode.editor.cn;
//ÁªôÂá∫‰∏§‰∏™ ÈùûÁ©∫ ÁöÑÈìæË°®Áî®Êù•Ë°®Á§∫‰∏§‰∏™ÈùûË¥üÁöÑÊï¥Êï∞„ÄÇÂÖ∂‰∏≠ÔºåÂÆÉ‰ª¨ÂêÑËá™ÁöÑ‰ΩçÊï∞ÊòØÊåâÁÖß ÈÄÜÂ∫è ÁöÑÊñπÂºèÂ≠òÂÇ®ÁöÑÔºåÂπ∂‰∏îÂÆÉ‰ª¨ÁöÑÊØè‰∏™ËäÇÁÇπÂè™ËÉΩÂ≠òÂÇ® ‰∏Ä‰Ωç Êï∞Â≠ó„ÄÇ 
//
// Â¶ÇÊûúÔºåÊàë‰ª¨Â∞ÜËøô‰∏§‰∏™Êï∞Áõ∏Âä†Ëµ∑Êù•ÔºåÂàô‰ºöËøîÂõû‰∏Ä‰∏™Êñ∞ÁöÑÈìæË°®Êù•Ë°®Á§∫ÂÆÉ‰ª¨ÁöÑÂíå„ÄÇ 
//
// ÊÇ®ÂèØ‰ª•ÂÅáËÆæÈô§‰∫ÜÊï∞Â≠ó 0 ‰πãÂ§ñÔºåËøô‰∏§‰∏™Êï∞ÈÉΩ‰∏ç‰ºö‰ª• 0 ÂºÄÂ§¥„ÄÇ 
//
// Á§∫‰æãÔºö 
//
// ËæìÂÖ•Ôºö(2 -> 4 -> 3) + (5 -> 6 -> 4)
//ËæìÂá∫Ôºö7 -> 0 -> 8
//ÂéüÂõ†Ôºö342 + 465 = 807
// 
// Related Topics ÈìæË°® Êï∞Â≠¶ 
// üëç 5110 üëé 0


//JavaÔºö‰∏§Êï∞Áõ∏Âä†
public class P_2_AddTwoNumbers{
    public static void main(String[] args) {
        Solution solution = new P_2_AddTwoNumbers().new Solution();
        // TO TEST
    }
    //leetcode submit region begin(Prohibit modification and deletion)
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode res = new ListNode(0);
        ListNode n1 = l1,n2 = l2,rn = res;
        int jw = 0;
        while(n1!=null && n2!=null){
            rn.next = new ListNode((n1.val+n2.val+jw)%10);
            jw = (n1.val + n2.val + jw)/10;
            n1 = n1.next;
            n2 = n2.next;
            rn = rn.next;
        }
        while(n1!=null){
            rn.next = new ListNode((n1.val+jw)%10);
            jw = (n1.val+jw)/10;
            n1 = n1.next;
            rn = rn.next;
        }
        while(n2!=null){
            rn.next = new ListNode((n2.val+jw)%10);
            jw = (n2.val+jw)/10;
            n2 = n2.next;
            rn = rn.next;
        }
        if(jw!=0){
            rn.next = new ListNode(jw);
        }
        return res.next;
    }
}
//leetcode submit region end(Prohibit modification and deletion)

}